Step 1: Run migration files
Take a look at the migrations directory. There are currently five migration files.
In the terminal, use sequelize-cli to migrate the tables defined for you in the migration files.
When this step is completed you have a database file created. Verify that the tables specified in these files have been created using sqlite3 in the terminal.

Command:
    dotenv npx sequelize-cli db:migrate         (from server directory)

Output:
    Sequelize CLI [Node: 16.20.2, CLI: 6.2.0, ORM: 6.37.3]

    Loaded configuration file "config/database.js".
    Using environment "development".
    Executed (default): SELECT 1+1 AS result
    Executed (default): SELECT name FROM `sqlite_master` WHERE type='table' and name!='sqlite_sequence';
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): CREATE TABLE IF NOT EXISTS `SequelizeMeta` (`name` VARCHAR(255) NOT NULL UNIQUE PRIMARY KEY);
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    == 20211008201504-create-color: migrating =======
    Executed (default): CREATE TABLE IF NOT EXISTS `Colors` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255));
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): INSERT INTO `SequelizeMeta` (`name`) VALUES ($1); {"$1":"20211008201504-create-color.js"}
    == 20211008201504-create-color: migrated (0.011s)

    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    == 20211008225744-create-shapes: migrating =======
    Executed (default): CREATE TABLE IF NOT EXISTS `Shapes` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255));
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): INSERT INTO `SequelizeMeta` (`name`) VALUES ($1); {"$1":"20211008225744-create-shapes.js"}
    == 20211008225744-create-shapes: migrated (0.004s)

    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    == 20211008225902-create-cats: migrating =======
    Executed (default): CREATE TABLE IF NOT EXISTS `Cats` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255), `weight` FLOAT);
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): INSERT INTO `SequelizeMeta` (`name`) VALUES ($1); {"$1":"20211008225902-create-cats.js"}
    == 20211008225902-create-cats: migrated (0.004s)

    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    == 20211008225940-create-users: migrating =======
    Executed (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `username` VARCHAR(255), `email` VARCHAR(255), `phone` INTEGER, `firstName` INTEGER, `lastName` INTEGER);
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): INSERT INTO `SequelizeMeta` (`name`) VALUES ($1); {"$1":"20211008225940-create-users.js"}
    == 20211008225940-create-users: migrated (0.004s)

    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    == 20211008225957-create-games: migrating =======
    Executed (default): CREATE TABLE IF NOT EXISTS `Games` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255), `numPlayers` INTEGER, `estPlayTime` INTEGER);
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): INSERT INTO `SequelizeMeta` (`name`) VALUES ($1); {"$1":"20211008225957-create-games.js"}
    == 20211008225957-create-games: migrated (0.004s)

Command / Output:
    sqlite> .tables
    Cats           Games          Shapes
    Colors         SequelizeMeta  Users

Step 2: Undo a single migration
Use sequelize-cli to undo the most recent migration.
Verify that the down function specified in the last migration file has been executed by making sure that the table no longer exists in your database.

Command: (run from sever directory)
    dotenv npx sequelize-cli db:migrate:undo

Output:
    Sequelize CLI [Node: 16.20.2, CLI: 6.2.0, ORM: 6.37.3]

    Loaded configuration file "config/database.js".
    Using environment "development".
    Executed (default): SELECT 1+1 AS result
    Executed (default): SELECT name FROM `sqlite_master` WHERE type='table' and name!='sqlite_sequence';
    Executed (default): PRAGMA TABLE_INFO(`SequelizeMeta`);
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): PRAGMA foreign_key_list(`SequelizeMeta`)
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    == 20211008225957-create-games: reverting =======
    Executed (default): DROP TABLE IF EXISTS `Games`;
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): DELETE FROM `SequelizeMeta` WHERE `name` = '20211008225957-create-games.js'
    == 20211008225957-create-games: reverted (0.007s)

Command / Output:
    sqlite> .tables
    Cats           Colors         SequelizeMeta  Shapes         Users

Step 3: Redo the migrations that have been undone
Use sequelize-cli to run the migrations. By default, each migration that has not been run will be executed.
Verify that the up functions in each of the migrations have been executed by making sure that each of the tables now exist again within your database.

Command: (run from server directory)
    dotenv npx sequelize-cli db:migrate

Output:
    Sequelize CLI [Node: 16.20.2, CLI: 6.2.0, ORM: 6.37.3]

    Loaded configuration file "config/database.js".
    Using environment "development".
    Executed (default): SELECT 1+1 AS result
    Executed (default): SELECT name FROM `sqlite_master` WHERE type='table' and name!='sqlite_sequence';
    Executed (default): PRAGMA TABLE_INFO(`SequelizeMeta`);
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): PRAGMA foreign_key_list(`SequelizeMeta`)
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    == 20211008225957-create-games: migrating =======
    Executed (default): CREATE TABLE IF NOT EXISTS `Games` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255), `numPlayers` INTEGER, `estPlayTime` INTEGER);
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): INSERT INTO `SequelizeMeta` (`name`) VALUES ($1); {"$1":"20211008225957-create-games.js"}
    == 20211008225957-create-games: migrated (0.020s)

Command / Output:
    sqlite> .tables
    Cats           Games          Shapes
    Colors         SequelizeMeta  Users

Step 4: Undo all migrations
Use sequelize-cli to undo all migrations.
Verify that the down functions in each of the undone migrations have been executed by making sure that each of these tables no longer exists in your database.

Command: (run from server directory)
    dotenv npx sequelize-cli db:migrate:undo:all

Output:
    Sequelize CLI [Node: 16.20.2, CLI: 6.2.0, ORM: 6.37.3]

    Loaded configuration file "config/database.js".
    Using environment "development".
    Executed (default): SELECT 1+1 AS result
    Executed (default): SELECT name FROM `sqlite_master` WHERE type='table' and name!='sqlite_sequence';
    Executed (default): PRAGMA TABLE_INFO(`SequelizeMeta`);
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): PRAGMA foreign_key_list(`SequelizeMeta`)
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    == 20211008225957-create-games: reverting =======
    Executed (default): DROP TABLE IF EXISTS `Games`;
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): DELETE FROM `SequelizeMeta` WHERE `name` = '20211008225957-create-games.js'
    == 20211008225957-create-games: reverted (0.008s)

    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    == 20211008225940-create-users: reverting =======
    Executed (default): DROP TABLE IF EXISTS `Users`;
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): DELETE FROM `SequelizeMeta` WHERE `name` = '20211008225940-create-users.js'
    == 20211008225940-create-users: reverted (0.005s)

    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    == 20211008225902-create-cats: reverting =======
    Executed (default): DROP TABLE IF EXISTS `Cats`;
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): DELETE FROM `SequelizeMeta` WHERE `name` = '20211008225902-create-cats.js'
    == 20211008225902-create-cats: reverted (0.005s)

    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    == 20211008225744-create-shapes: reverting =======
    Executed (default): DROP TABLE IF EXISTS `Shapes`;
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): DELETE FROM `SequelizeMeta` WHERE `name` = '20211008225744-create-shapes.js'
    == 20211008225744-create-shapes: reverted (0.005s)

    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): SELECT `name` FROM `SequelizeMeta` AS `SequelizeMeta` ORDER BY `SequelizeMeta`.`name` ASC;
    == 20211008201504-create-color: reverting =======
    Executed (default): DROP TABLE IF EXISTS `Colors`;
    Executed (default): SELECT name FROM sqlite_master WHERE type='table' AND name='SequelizeMeta';
    Executed (default): PRAGMA INDEX_LIST(`SequelizeMeta`)
    Executed (default): PRAGMA INDEX_INFO(`sqlite_autoindex_SequelizeMeta_1`)
    Executed (default): DELETE FROM `SequelizeMeta` WHERE `name` = '20211008201504-create-color.js'
    == 20211008201504-create-color: reverted (0.006s)

Command / Output:
    sqlite> .tables
    SequelizeMeta
